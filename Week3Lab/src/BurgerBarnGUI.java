
import java.util.ArrayList;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Scott Braaten
 * 
 * Program Name: BurgerBarnGUI.java
 * Programmer's Name: Student Name 
 * Program Description: This program allows for customers to order burgers with specifications.
 * 
 */

public class BurgerBarnGUI extends javax.swing.JFrame {
    private Order order;

    /**
     * Creates new form BurgerBarnGUI
     */
    public BurgerBarnGUI() {
        initComponents();
        
        // Initialize order to handle item processing.
        order = new Order();
        order.getTempItem().calcPrice();
        
        // Set up prices
        txtQty.setText(String.valueOf(order.getTempItem().getQty()));
        txtItemPrice.setText(String.format("%.2f", order.getTempItem().getPrice()));
        txtTotal.setText(String.format("%.2f", order.getTotal()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lblOrder = new javax.swing.JLabel();
        rdoSingle = new javax.swing.JRadioButton();
        rdoDouble = new javax.swing.JRadioButton();
        chkCheese = new javax.swing.JCheckBox();
        chkBacon = new javax.swing.JCheckBox();
        chkMeal = new javax.swing.JCheckBox();
        lblItemPrice = new javax.swing.JLabel();
        txtItemPrice = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaOrder = new javax.swing.JTextArea();
        lblQty = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        lblTotal = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        itmExit = new javax.swing.JMenuItem();
        mnuOrder = new javax.swing.JMenu();
        itmAdd = new javax.swing.JMenuItem();
        itmClear = new javax.swing.JMenuItem();
        itmNewOrder = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblOrder.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblOrder.setText("YOUR ORDER");

        buttonGroup1.add(rdoSingle);
        rdoSingle.setText("Single Burger");
        rdoSingle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoSingleActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoDouble);
        rdoDouble.setText("Double Burger");
        rdoDouble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoDoubleActionPerformed(evt);
            }
        });

        chkCheese.setText("Add Cheese");
        chkCheese.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCheeseActionPerformed(evt);
            }
        });

        chkBacon.setText("Add Bacon");
        chkBacon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBaconActionPerformed(evt);
            }
        });

        chkMeal.setText("Make it a meal");
        chkMeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMealActionPerformed(evt);
            }
        });

        lblItemPrice.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblItemPrice.setText("Item Price");

        txtItemPrice.setEditable(false);

        areaOrder.setColumns(20);
        areaOrder.setRows(5);
        jScrollPane1.setViewportView(areaOrder);

        lblQty.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblQty.setText("Quantity");

        lblTotal.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTotal.setText("Order Total");

        txtTotal.setEditable(false);

        mnuFile.setText("File");

        itmExit.setText("Exit");
        itmExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmExitActionPerformed(evt);
            }
        });
        mnuFile.add(itmExit);

        jMenuBar1.add(mnuFile);

        mnuOrder.setText("Order");

        itmAdd.setText("Add to Order");
        itmAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmAddActionPerformed(evt);
            }
        });
        mnuOrder.add(itmAdd);

        itmClear.setText("Clear for next item");
        itmClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmClearActionPerformed(evt);
            }
        });
        mnuOrder.add(itmClear);

        itmNewOrder.setText("New Order");
        itmNewOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmNewOrderActionPerformed(evt);
            }
        });
        mnuOrder.add(itmNewOrder);

        jMenuBar1.add(mnuOrder);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(chkMeal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chkBacon, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(chkCheese, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rdoDouble)
                        .addComponent(rdoSingle))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblQty)
                        .addGap(18, 18, 18)
                        .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblTotal)
                                .addGap(27, 27, 27)
                                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblItemPrice)
                                .addGap(51, 51, 51)
                                .addComponent(txtItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(lblOrder)))
                        .addGap(0, 80, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoSingle)
                    .addComponent(lblOrder))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rdoDouble)
                        .addGap(41, 41, 41)
                        .addComponent(chkCheese)
                        .addGap(18, 18, 18)
                        .addComponent(chkBacon)
                        .addGap(53, 53, 53)
                        .addComponent(chkMeal))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTotal)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblQty)
                        .addComponent(txtQty)
                        .addComponent(lblItemPrice)))
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rdoSingleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoSingleActionPerformed
        // Set patties, update price, and update price displayed.
        order.getTempItem().setPatties(1);
        order.getTempItem().calcPrice();
        txtItemPrice.setText(String.format("%.2f", order.getTempItem().getPrice()));
    }//GEN-LAST:event_rdoSingleActionPerformed

    private void rdoDoubleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoDoubleActionPerformed
        // Set patties, update price, and update price displayed.
        order.getTempItem().setPatties(2);
        order.getTempItem().calcPrice();
        txtItemPrice.setText(String.format("%.2f", order.getTempItem().getPrice()));
    }//GEN-LAST:event_rdoDoubleActionPerformed

    private void chkCheeseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCheeseActionPerformed
        // Set cheese, update price, and update price displayed.
        order.getTempItem().setCheese(!order.getTempItem().isCheese());
        order.getTempItem().calcPrice();
        txtItemPrice.setText(String.format("%.2f", order.getTempItem().getPrice()));
    }//GEN-LAST:event_chkCheeseActionPerformed

    private void chkBaconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBaconActionPerformed
        // Set bacon, update price, and update price displayed.
        order.getTempItem().setBacon(!order.getTempItem().isBacon());
        order.getTempItem().calcPrice();
        txtItemPrice.setText(String.format("%.2f", order.getTempItem().getPrice()));
    }//GEN-LAST:event_chkBaconActionPerformed

    private void chkMealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMealActionPerformed
        // Set meal, update price, and update price displayed.
        order.getTempItem().setMeal(!order.getTempItem().isMeal());
        order.getTempItem().calcPrice();
        txtItemPrice.setText(String.format("%.2f", order.getTempItem().getPrice()));
    }//GEN-LAST:event_chkMealActionPerformed

    private void itmAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmAddActionPerformed
        // check for potential errors
        
        if (!txtQty.getText().matches("-?(0|[1-9]\\d*)")) {
            JOptionPane.showMessageDialog(this, "Enter an integer in the quantity field.");
            return;
        }
        
        if (!rdoSingle.isSelected() && !rdoDouble.isSelected()) {
            JOptionPane.showMessageDialog(this, "Select a single or double patty burger.");
            return;
        }

        // Set qty right before Item is added to capture final qty in textfield
        order.getTempItem().setQty(Integer.parseInt(txtQty.getText()));
        
        // Adds order to arraylist items
        order.addToOrder();
        
        // Set up new temporary Item
        order.setTempItem(new Item(order.getTempItem()));
        order.getTempItem().setQty(1);
        
        ArrayList<Item> items = order.getItems();

        String displayItems = "";
        
        // Set up String to display in textarea
        for (int i = 0; i < items.size(); i++) {
            String variableOutput = "" + items.get(i).getQty();
            if (items.get(i).getPatties() == 1) {
                variableOutput += " single";
            } else if (items.get(i).getPatties() == 2) {
                variableOutput += " double";
            }
            if (items.get(i).isCheese()) {
                variableOutput += ", cheese";
            }
            if (items.get(i).isBacon()) {
                variableOutput += ", bacon";
            }
            if (items.get(i).isMeal()) {
                variableOutput += ", meal";
            }
            variableOutput += " at $" + String.format("%.2f", items.get(i).getPrice()) + " each\n";
            displayItems += variableOutput;
        }
        
        // Update text at end of add to order
        areaOrder.setText(displayItems);
        txtTotal.setText(String.format("%.2f", order.getTotal()));
        txtQty.setText(String.valueOf(order.getTempItem().getQty()));
    }//GEN-LAST:event_itmAddActionPerformed

    private void itmClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmClearActionPerformed
        // clear radio buttons and update Item property values, updating Item price too
        chkCheese.setSelected(false);
        order.getTempItem().setCheese(false);
        
        chkBacon.setSelected(false);
        order.getTempItem().setBacon(false);
        
        chkMeal.setSelected(false);
        order.getTempItem().setMeal(false);
        
        order.getTempItem().calcPrice();
        txtItemPrice.setText(String.format("%.2f", order.getTempItem().getPrice()));
    }//GEN-LAST:event_itmClearActionPerformed

    private void itmNewOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmNewOrderActionPerformed
        // re-initialize order, determine new item price
        order = new Order();
        order.getTempItem().calcPrice();
        
        // reset components
        areaOrder.setText("");
        txtTotal.setText("$0.00");
        rdoSingle.setSelected(true);
        txtItemPrice.setText(String.format("%.2f", order.getTempItem().getPrice()));
        chkCheese.setSelected(false);
        chkBacon.setSelected(false);
        chkMeal.setSelected(false);
    }//GEN-LAST:event_itmNewOrderActionPerformed

    private void itmExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmExitActionPerformed
        // exit app
        System.exit(0);
    }//GEN-LAST:event_itmExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BurgerBarnGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BurgerBarnGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BurgerBarnGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BurgerBarnGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BurgerBarnGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaOrder;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chkBacon;
    private javax.swing.JCheckBox chkCheese;
    private javax.swing.JCheckBox chkMeal;
    private javax.swing.JMenuItem itmAdd;
    private javax.swing.JMenuItem itmClear;
    private javax.swing.JMenuItem itmExit;
    private javax.swing.JMenuItem itmNewOrder;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblItemPrice;
    private javax.swing.JLabel lblOrder;
    private javax.swing.JLabel lblQty;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenu mnuOrder;
    private javax.swing.JRadioButton rdoDouble;
    private javax.swing.JRadioButton rdoSingle;
    private javax.swing.JTextField txtItemPrice;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
